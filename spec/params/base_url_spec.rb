require 'spec_helper'
require 'ronin/exploits/params/base_url'
require 'ronin/exploits/exploit'

describe Ronin::Exploits::Params::BaseURL do
  module TestBaseURLParam
    class TestExploit < Ronin::Exploits::Exploit
      include Ronin::Exploits::Params::BaseURL
    end
  end

  describe ".included" do
    subject { TestBaseURLParam::TestExploit }

    it "must add a required 'base_url' param to the exploit class" do
      expect(subject.params[:base_url]).to_not be_nil
      expect(subject.params[:base_url].type).to be_kind_of(Ronin::Core::Params::Types::URI)
      expect(subject.params[:base_url].required?).to be(true)
      expect(subject.params[:base_url].desc).to eq("The base URL of the target")
    end
  end

  let(:base_url) { URI('https://example.com:8080/') }
  subject { TestBaseURLParam::TestExploit.new(params: {base_url: base_url}) }

  describe "#host" do
    it "must return the host value of the base URL" do
      expect(subject.host).to eq(base_url.host)
    end
  end

  describe "#port" do
    it "must return the port value of the base URL" do
      expect(subject.port).to eq(base_url.port)
    end
  end
end
