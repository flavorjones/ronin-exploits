#
# ronin-exploits - A Ruby library for ronin-rb that provides exploitation and
# payload crafting functionality.
#
# Copyright (c) 2007-2022 Hal Brodigan (postmodern.mod3 at gmail.com)
#
# This file is part of ronin-exploits.
#
# ronin-exploits is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# ronin-exploits is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with ronin-exploits.  If not, see <https://www.gnu.org/licenses/>.
#

module Ronin
  module Exploits
    module Metadata
      #
      # Adds a {HeaderName::ClassMethods#header_name header_name} metadata
      # attribute to an exploit class.
      #
      module HeaderName
        #
        # @api private
        #
        def self.included(exploit)
          exploit.extend ClassMethods
        end

        module ClassMethods
          #
          # Get or sets the target HTTP Header name of the exploit.
          #
          # @param [String, nil] new_header_name
          #
          # @return [String, nil]
          #
          # @api public
          #
          def header_name(new_header_name=nil)
            if new_header_name
              @header_name = new_header_name
            else
              @header_name ||= if superclass.kind_of?(ClassMethods)
                                 superclass.header_name
                               end
            end
          end
        end

        #
        # The target HTTP Header name of the exploit.
        #
        # @return [String, nil]
        #
        # @api public
        #
        # @see ClassMethods#header_name
        #
        def header_name
          self.class.header_name
        end
      end
    end
  end
end
