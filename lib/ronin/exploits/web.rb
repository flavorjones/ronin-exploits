#
# Ronin Exploits - A Ruby library for Ronin that provides exploitation and
# payload crafting functionality.
#
# Copyright (c) 2007-2012 Hal Brodigan (postmodern.mod3 at gmail.com)
#
# This file is part of Ronin Exploits.
#
# Ronin is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ronin is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ronin.  If not, see <http://www.gnu.org/licenses/>
#

require 'ronin/exploits/remote'
require 'ronin/network/mixins/http'

require 'uri/query_params'

module Ronin
  module Exploits
    #
    # An {Exploit} class that represents exploits that run against Web
    # services.
    #
    class Web < Remote

      include Network::Mixins::HTTP

      # The HTTP request method to use
      property :http_method, String, :default => 'GET',
                                     :set     => %w[
                                       GET
                                       HEAD
                                       POST
                                       PUT
                                       DELETE
                                       OPTIONS
                                       TRACE
                                       CONNECT
                                     ]

      # The optional URL path prefix
      parameter :url_prefix, :type        => String,
                             :description => 'Optional URL path prefix'

      # The targeted URL path
      property :url_path, String

      # The targeted URL query string
      property :url_query, String

      # Additional URL query params
      parameter :url_query_params, :type    => Hash[String => String],
                                   :default => {}

      #
      # Builds the target URL based on the `#http_host`, `#http_port`,
      # {#url_prefix} and {#url_query_params} parameters as well as the
      # {#url_path} and {#url_query} properties.
      #
      # @return [URI::HTTP]
      #   The HTTP URI object.
      #
      def target_url
        require_params :host

        url = ::URI::HTTP.build(
          :host  => self.host,
          :port  => self.port,
          :path  => self.url_path,
          :query => self.url_query
        )

        if self.url_prefix
          # add tue url prefix
          url.path = File.join('',self.url_prefix,url.path)
        end

        # add additional query params
        url.query_params.merge!(self.url_query_params)

        return url
      end

    end
  end
end
