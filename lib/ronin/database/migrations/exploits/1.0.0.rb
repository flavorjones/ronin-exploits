#
# Ronin Exploits - A Ruby library for Ronin that provides exploitation and
# payload crafting functionality.
#
# Copyright (c) 2007-2012 Hal Brodigan (postmodern.mod3 at gmail.com)
#
# This file is part of Ronin Exploits.
#
# Ronin is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ronin is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ronin.  If not, see <http://www.gnu.org/licenses/>
#

require 'ronin/database/migrations'

module Ronin
  module Database
    module Migrations
      migration :create_advisories_table do
        up do
          create_table :ronin_advisories do
            column :id, Serial

            column :publisher, String, :not_null => true
            column :year, Integer
            column :number, Integer, :not_null => true
          end

          create_index :ronin_advisories, :publisher, :year, :number,
                       :name => :unique_index_ronin_advisories,
                       :unique => true
        end

        down do
          drop_table :ronin_advisories
        end
      end

      migration :create_exploits_table,
                :needs => [
                  :create_licenses_table,
                  :create_script_paths_table
                ] do
        up do
          create_table :ronin_exploits_exploits do
            column :id, Serial
            column :type, String, :not_null => true
            column :name, String, :not_null => true
            column :description, Ronin::Model::Types::Description
            column :version, String, :default => '0.1'
            column :status, String, :default => 'potential'
            column :released, Boolean, :default => false
            column :reported, Boolean, :default => false
            column :license_id, Integer
            column :script_path_id, Integer

            # needed by Exploits::RempteTCP and Exploits::RemoteUDP
            column :default_port, Integer

            # needed by Exploits::Web
            column :url_path, String
            column :url_query, String
            column :url_query_param_id, Integer

            # needed by Exploits::LFI
            column :leading, Boolean
            column :traversal, Integer
            column :terminate, Boolean
          end

          create_table :ronin_exploits_references do
            column :id, Serial
            column :advisory_id, Integer, :not_null => true
            column :exploit_id, Integer, :not_null => true
          end

          create_table :ronin_author_exploits do
            column :id, Serial
            column :author_id, Integer, :not_null => true
            column :exploit_id, Integer, :not_null => true
          end
        end

        down do
          drop_table :ronin_author_exploits
          drop_table :ronin_exploits_references
          drop_table :ronin_exploits_exploits
        end
      end

      migration :create_exploits_targets_table,
                :needs => :create_exploits_table do
        up do
          create_table :ronin_exploits_targets do
            column :id, Serial
            column :type, String, :not_null => true
            column :description, Ronin::Model::Types::Description
            column :params, Yaml
            column :arch_id, Integer
            column :os_id, Integer
            column :software_id, Integer
            column :exploit_id, Integer, :not_null => true

            # needed by Exploits::Targets::BufferOverflow
            column :buffer_length, Integer
            column :bp, Integer
            column :ip, Integer
            column :frame_repeat, Integer

            # needed by Exploits::Targets::FormatString
            column :overwrite, Integer
            column :address, Integer
            column :pop_length, Integer
          end
        end

        down do
          drop_table :ronin_exploits_targets
        end
      end

      migration :create_encoders_table,
                :needs => :create_script_paths_table do
        up do
          create_table :ronin_encoders_encoders do
            column :id, Serial
            column :type, String, :not_null => true
            column :name, String, :not_null => true
            column :description, Ronin::Model::Types::Description
            column :arch_id, Integer
            column :os_id, Integer
            column :script_path_id, Integer
          end

          create_table :ronin_author_encoders_encoders do
            column :id, Serial
            column :author_id, Integer, :not_null => true
            column :encoder_id, Integer, :not_null => true
          end
        end

        down do
          drop_table :ronin_author_encoders_encoders
        end
      end

      migration :create_payloads_table,
                :needs => [
                  :create_licenses_table,
                  :create_script_paths_table
                ] do
        up do
          create_table :ronin_payloads_payloads do
            column :id, Serial
            column :type, String, :not_null => true
            column :name, String, :not_null => true
            column :description, Ronin::Model::Types::Description
            column :version, String, :default => '0.1'
            column :license_id, Integer
            column :script_path_id, Integer
            column :arch_id, Integer
            column :os_id, Integer

            # needed by Exploits::RempteTCP and Exploits::RemoteUDP
            column :default_port, Integer

            # needed by Exploits::Web
            column :url_path, String
            column :url_query, String
          end

          create_table :ronin_author_payloads do
            column :id, Serial
            column :author_id, Integer, :not_null => true
            column :payload_id, Integer, :not_null => true
          end
        end

        down do
          drop_table :ronin_author_payloads
          drop_table :ronin_payloads_payloads
        end
      end

      migration :create_attacks_webs_table do
        up do
          create_table :ronin_attacks_webs do
            column :id, Serial
            column :title, String
            column :description, Text
            column :request_method, String, :default => 'GET'
            column :header_name, String
            column :query_param, String
            column :original_data, String
            column :url_id, Integer, :not_nil => true
            column :created_at, Time, :not_nil => true

            # Ronin::Attacks::LFI
            column :traversal, Integer
            column :terminate, Boolean

            # Ronin::Attacks::RFI
            column :script_language, String

            # Ronin::Attacks::SQLi
            column :escape, String
            column :quotes, String
          end
        end

        down do
          drop_table :ronin_attacks_webs
        end
      end

      migration :create_vulns_table do
        up do
          create_table :ronin_vulns do
            column :id, Serial
            column :address_id, Integer
            column :open_port_id, Integer
            column :url_id, Integer
            column :advisory_id, Integer
          end
        end

        down do
          drop_table :ronin_vulns
        end
      end
    end
  end
end
